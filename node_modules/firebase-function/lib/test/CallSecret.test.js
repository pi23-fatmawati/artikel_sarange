"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const src_1 = require("../src");
describe('CallSecret', () => {
    it('fromObject', () => {
        (0, chai_1.expect)(() => src_1.CallSecret.fromObject(null, new src_1.DummyLogger())).to.throw();
        (0, chai_1.expect)(() => src_1.CallSecret.fromObject({ expiresAt: 0, hashedData: 0 }, new src_1.DummyLogger())).to.throw();
        (0, chai_1.expect)(() => src_1.CallSecret.fromObject({ expiresAt: '', hashedData: 0 }, new src_1.DummyLogger())).to.throw();
        const expiresAt = src_1.UtcDate.now;
        (0, chai_1.expect)(src_1.CallSecret.fromObject({
            expiresAt: expiresAt.encoded,
            hashedData: 'abc'
        }, new src_1.DummyLogger())).to.be.deep.equal({
            expiresAt: expiresAt.encoded,
            hashedData: 'abc'
        });
    });
    it('check', () => {
        const expiresAt = src_1.UtcDate.now;
        (0, chai_1.expect)(() => src_1.CallSecret.checkCallSecret({ expiresAt: expiresAt.encoded, hashedData: 'abc' }, 'xyz', new src_1.DummyLogger())).to.throw();
        (0, chai_1.expect)(() => src_1.CallSecret.checkCallSecret({ expiresAt: expiresAt.advanced({ minute: -1 }).encoded, hashedData: (0, src_1.sha512)(expiresAt.advanced({ minute: -1 }).encoded, 'xyz') }, 'xyz', new src_1.DummyLogger())).to.throw();
        (0, chai_1.expect)(() => src_1.CallSecret.checkCallSecret({ expiresAt: expiresAt.advanced({ minute: 1 }).encoded, hashedData: (0, src_1.sha512)(expiresAt.advanced({ minute: 1 }).encoded, 'xyz') }, 'xyz', new src_1.DummyLogger())).not.to.throw();
    });
});
