import { type DatabaseType, Guid, type IDatabaseReference, type IFirebaseRequest, type IFunctionType, type ILogger, type IParameterContainer } from '../src';
import { type DatabaseScheme } from './DatabaseScheme';
export declare class GetPersonRequest implements IFirebaseRequest<GetPersonRequestType> {
    private readonly databaseReference;
    private readonly logger;
    readonly parameters: IFunctionType.Parameters<GetPersonRequestType> & {
        databaseType: DatabaseType;
    };
    constructor(parameterContainer: IParameterContainer, databaseReference: IDatabaseReference<DatabaseScheme>, logger: ILogger);
    execute(): Promise<IFunctionType.ReturnType<GetPersonRequestType>>;
}
export type GetPersonRequestType = IFunctionType<{
    id: Guid;
}, {
    id: string;
    name: string;
    age: number;
} | null, {
    id: string;
}>;
