import type * as functions from 'firebase-functions';
import { DatabaseType } from './DatabaseType';
import { type FirebaseFunctionConstructor } from './FirebaseFunction';
import { type FunctionType } from './FunctionType';
import { type PrivateKeys } from './PrivateKeys';
import { type ValidReturnType } from './ValidReturnType';
import { type FirebaseScheduleConstructor } from './FirebaseSchedule';
export type FirebaseFunctions = FirebaseFunctionConstructor<FunctionType<unknown, ValidReturnType, unknown>> | {
    schedule: string;
    FirebaseScheduleConstructor: FirebaseScheduleConstructor;
} | {
    [key: string]: FirebaseFunctions;
};
export type FirebaseRunnableFunctions = (functions.HttpsFunction & functions.Runnable<unknown>) | functions.CloudFunction<unknown> | {
    [key: string]: FirebaseRunnableFunctions;
};
export declare function createFirebaseFunctions(getPrivateKeys: (databaseType: DatabaseType) => PrivateKeys, firebaseFunctions: Record<string, FirebaseFunctions>, debugFirebaseFunctions?: Record<string, FirebaseFunctions>): FirebaseRunnableFunctions;
